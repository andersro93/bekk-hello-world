name: CI

on:
  push:
    branches:
      - "main"
  pull_request:

permissions:
  contents: write

env:
  REGISTRY: ghcr.io
  REPOSITORY: andersro93/bekk-hello-world

jobs:
  metadata:
    name: 📜 Metadata
    runs-on: ubuntu-latest
    steps:
      - name: 🛎️ Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ⚙️ Set up dotnet
        uses: actions/setup-dotnet@v4

      - name: ⚙️ Install GitVersion
        uses: gittools/actions/gitversion/setup@v2
        with:
          versionSpec: '5.x'

      - name: 🕵 Determine semver
        id: gitversion
        uses: gittools/actions/gitversion/execute@v2
        with:
          useConfigFile: true

    outputs:
      tag: ${{ steps.gitversion.outputs.fullSemVer }}

  tests:
    name: 🧪 Tests
    runs-on: ubuntu-latest
    needs:
      - metadata
    steps:
      - name: 🛎️ Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Set up dotnet
        uses: actions/setup-dotnet@v4

      - name: 🏗️ Build solution
        run: dotnet build

      - name: 🧪 Run tests
        run: dotnet test

  publish:
    name: 📦 Publish
    runs-on: ubuntu-latest
    needs:
      - tests
    strategy:
      matrix:
        include:
          - os: "linux"
            arch: "x64"
            suffix: "amd64"
          - os: "linux"
            arch: "arm64"
            suffix: "arm64"
    env:
      LATEST_TAG: latest-${{ matrix.suffix }}
      IMAGE_TAG: ${{ needs.metadata.outputs.tag }}-${{ matrix.suffix }}
    steps:
      - name: 🛎️ Checkout code
        uses: actions/checkout@v4

      - name: 🔐 Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: ⚙️ Set up dotnet
        uses: actions/setup-dotnet@v4

      - name: 🏗️ Build container images
        run: |
          dotnet publish -p:Version=${{ needs.metadata.outputs.tag }} \
            --os ${{ matrix.os }} \
            --arch ${{ matrix.arch }} \
            -p:ContainerRepository=${{ env.REPOSITORY }} \
            -p:ContainerImageTags=${{ env.LATEST_TAG }}

      - name: 🔖 Tag image - ${{ env.IMAGE_TAG }}
        if: github.ref_name == 'main'
        run: |
          docker tag \
            ${{ env.REPOSITORY }}:${{ env.LATEST_TAG }} \
            ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: 🔖 Tag image - latest
        if: github.ref_name == 'main'
        run: |
          docker tag \
            ${{ env.REPOSITORY }}:${{ env.LATEST_TAG }} \
            ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.LATEST_TAG }}

      - name: 🚀 Push image ${{ needs.metadata.outputs.tag }}-${{ matrix.suffix }}
        if: github.ref_name == 'main'
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: 🚀 Push image latest
        if: github.ref_name == 'main'
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.LATEST_TAG }}

  release:
    name: 🚀 Release
    runs-on: ubuntu-latest
    if: github.ref_name == 'main'
    needs:
      - metadata
      - publish
    steps:
      - name: 🔐 Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 📑 Create ${{ needs.metadata.outputs.tag }} manifest
        run: |
          docker create manifest ghcr.io/${{ env.REPOSITORY }}:${{ needs.metadata.outputs.tag }} \
            ghcr.io/${{ env.REPOSITORY }}:${{ needs.metadata.outputs.tag }}-amd64 \
            ghcr.io/${{ env.REPOSITORY }}:${{ needs.metadata.outputs.tag }}-arm64

      - name: 🚀 Push ${{ needs.metadata.outputs.tag }} manifest
        run: |
          docker manifest push ghcr.io/${{ env.REPOSITORY }}:${{ needs.metadata.outputs.tag }}

      - name: 📑 Create latest manifest
        run: |
          docker create manifest ghcr.io/${{ env.REPOSITORY }}:latest \
            ghcr.io/${{ env.REPOSITORY }}:latest-amd64 \
            ghcr.io/${{ env.REPOSITORY }}:latest-arm64

      - name: 🚀 Push latest manifest
        run: |
          docker manifest push ghcr.io/${{ env.REPOSITORY }}:latest

      - name: 🔖 Tag commit
        run: |
          git tag -f ${{ needs.metadata.outputs.tag }}
          git push origin ${{ needs.metadata.outputs.tag }}

      - name: 📋 Generate changelog
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ github.token }}
          tag: ${{ steps.gitversion.outputs.fullSemVer }}

      - name: 🚀 Create Github Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ needs.metadata.outputs.tag }}
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Release ${{ needs.metadata.outputs.tag }}
          body: ${{ steps.changelog.outputs.changes }}
          draft: false
          prerelease: false
